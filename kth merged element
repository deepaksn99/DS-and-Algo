#include<bits/stdc++.h>

using namespace std;


int main() 
{   
    int t;
    scanf("%d",&t);
    for(int i =0; i<t;i++)
    {   
        int k;
        cin>>k;
        string s1,s2;
        cin>>s1>>s2;
        replace(s1.begin(),s1.end(),',',' ');
        replace(s2.begin(), s2.end(), ',', ' ');
        vector<long> arr1, arr2;
        stringstream stream1(s1);
        while(stream1){
            int x;
            stream1>>x;
            arr1.push_back(x);
        }
        arr1.pop_back();
        stringstream stream2(s2);
        while(stream2){
            int x;
            stream2>>x;
            arr2.push_back(x);
        }
        arr2.pop_back();
    
        int count = 0;
        int c1;
        int c2;
        c1 = c2 = 0;
        int temp;
        int flag  = 0;
        if(arr2.size()==0)
        {
            printf("%d\n",arr1[k-1]);
        }
        if(arr1.size()==0)
           
           {
               printf("%d\n",arr2[k-1]);
           }
        if(arr1.size()!=0 && arr2.size()!=0)
           {     
            while(c1<arr1.size() && c2<arr2.size())
            {
                if(arr1[c1]<arr2[c2])
                {
                    temp = arr1[c1];
                    c1++;
                    count+=1;

                }
                else if(arr1[c1]>arr2[c2])
                {
                   temp = arr2[c2];
                    c2++;
                    count+=1;

                }
                else
                {
                    temp =  arr1[c1];

                    c1++;
                    c2++;
                    count+=2;  
                }
                if(count >= k)
                {
                    printf("%d\n",temp);
                    flag = 1;
                    break;
                }
            }
      }
        if(!flag)
        {
            if(c1==arr1.size()){
                printf("%d\n",arr2[c2 + k - count - 1]);
            }
            if(c2==arr2.size() && c2!=0){
                printf("%d\n",arr1[c1 + k - count - 1 ]);
            }
        }
   }

    return 0;
}
